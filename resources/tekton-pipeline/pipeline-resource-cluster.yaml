apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: cnf10-cluster
  namespace: dpdk-build-testpmd
spec:
  type: cluster
  params:
    - name: url
      value: 'https://api.cnf10.kni.lab.eng.bos.redhat.com:6443' 
    - name: cadata
      value: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaRENDQWt5Z0F3SUJBZ0lJSmFDc3A0NG9OYkF3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE5UazBPREU0TWpNNE1CNFhEVEl3TURjeE5URXpNRFF3TUZvWApEVEl5TURjeE5URXpNRFF3TVZvd01qRXdNQzRHQTFVRUF3d25LaTVoY0hCekxtTnVaakV3TG10dWFTNXNZV0l1ClpXNW5MbUp2Y3k1eVpXUm9ZWFF1WTI5dE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXZRdUNldTFqSnU5ejlIcC9OZ2M3T1hsbm14WGVEelpLenMxdmQxWThRcjdGQnlVVElVY1F1enJhOXV3eQpMNVdST0xuME5YMi9GVUM0ckNXNHY5ME8zYjRZNmtXRzFDSzdNWk8zekNGZG9pZG0xTU4wVHRWRGV6RnZsc1RtCldydFpKQW1EWmo4RXQwdEdWNGFaRTdSd2J3NlF1clY3bjF2L20rTW80YUVxWTcwL2ZWUDB6aFd2eEtqd1I3SVIKTnY2ZVo2cFFpakdUbDUzSERpZzJSQ2hLcHBDMjY5bmpnOTFWQXJSNm1oKzNZMmRqeEE0eEw1RythaUcvZnIvVApCcmU2SlJ1SlBnaWdYR0RZYnVxcGpXeUxuRzE3TTFWTTVYMWl5eHNTbDZpdzNPSmE1dHlPSFo2VklaKzNjTHp4CmM0MGNrVzhjcWhZQVAraEJBNTNKWUI0VHFRSURBUUFCbzRHSk1JR0dNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVQKQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlRtaDVJeQpYUy8veUd2SVpQN1ZHUm9lWk8zZUZ6QXlCZ05WSFJFRUt6QXBnaWNxTG1Gd2NITXVZMjVtTVRBdWEyNXBMbXhoCllpNWxibWN1WW05ekxuSmxaR2hoZEM1amIyMHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR25GTTdrR21VK2UKUVJaTHB2Q2VLd3l5ZFNLemt3Q1FTMitiZW9HUU9WSW9Hb1hpL1BJK0FwTWkyNHYreHl1cXJ1ajJYVm4rUzFtWQp4RytVcnd1cklETlR3MS9tUG51MHRMZXBXOUsxdnkvODdoMDQ4Zi9jR2N2dWlCRVFzSVVBbXE0SXRMWkJOdFFxCmtKbXFnQ3pVcTkxanlwWE90VlFHOWhSL0llbDVYbk1KNlIvSjVCbnkrYkFJNHdrdjVpT25HT2d0L2tpOGdCMDgKRU5STnlrdFUwNEpLSXdqc0UwUzFzTFo1eEVDeDVNL3Mzc29YZ0FlNyt2a0dYM0dDUXpYenhzUmxnNnVKNUJiVQpOcldHa0ErcXJNVkpwZ2kzcFBrVjRUKy9CZzRrdFVxc3Q2TE9vUUxNSGdrS2s2U2lnV0c4cElIekNsZWlseDJlCjN3NW1rOXBob2ZjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxT1RRNE1UZ3lNemd3SGhjTk1qQXdOekUxTVRNd016VTNXaGNOTWpJd056RTEKTVRNd016VTRXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU9UUTRNVGd5TXpndwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEWS96K0dRcEEvd1VtMi94ZCtOZDFICkJYQVJqZExETnlFOXpTRWZNNUErQWsraUtXUFVXUk5nTk5ZYWRaczJYMTloQk56RC92cEJ2bk1OZXNyS0doOGMKOHg4NGJBbGR6TExoeW9rVHZvUWRSLzNpbGxyVjZtck1MSDRjd01UUjVMMWdSenNaSjF1YUhoTWo1ZzU4ZVpjawpPaFlaOCsvUC9oUGsyU25kYnNlRUdmbEphckhnekpPcU9xMit5cEZKUDhyL3FTLzZVZ1ZFZHZuUXBLdU1iOW5SCmxWaG9xUlpFREtDbFk0SnM4UlpPUFBPNlY1NjFGZ29reW5ObHNFU1VqcmZ4UzVhWW5iVjh4UWxGcEkwdDBLMjQKOWN4TFRJZGJLcE5Cd2JRQmV4cTNTVmE3SXpuUDZRWTJtOUx1SzA5RURwdXhZN3ZkNEdybzRpUXBISUswaFU5LwpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBcW5ad0gwMzZDVkgyY2E3SzlMdmRZMVFYZHhVUmZNdHRuNCtPZ3M2MFUKYi9qMWdBeWdLRWtIYXlCMjNyOGRMVFJVSDZCdE1DRlpNeXJPVmIxVDVLUTRTM2NyNWQwOHphRFUycjg4YVVoKwo0MWRUa0xKVnJDUmtoK1p1bVZ5bjBFQ0dST1c3Q3loUUxxZnlQM1JzeVVBNnFqZWE0bmkzSEZrdnluMU1lL2xmCitJMUwzTXBXRlZZbDUzcEp5bjRxWFpiVEVZRmhZNzM4NWtDK2dJRzBINzlVTXZuVlY5aWhEWHNQVU5EVjh1WU0KKzRtSXFtVzJRenM5U0t5ZCtlVjRhdXZlMjRzekgwRDhwY09CWTdBQjBZMExpUlN4U2NxM3loUndTeDhhSWNnYgpyYnhWRzRSYlc0eFQ5N1dONG42QWp4aCtFWlRDTzEzbXV1SFlmUHkyS3B5YgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEWkRDQ0FreWdBd0lCQWdJSUphQ3NwNDRvTmJBd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFa01DSUdBMVVFCkF3d2JhVzVuY21WemN5MXZjR1Z5WVhSdmNrQXhOVGswT0RFNE1qTTRNQjRYRFRJd01EY3hOVEV6TURRd01Gb1gKRFRJeU1EY3hOVEV6TURRd01Wb3dNakV3TUM0R0ExVUVBd3duS2k1aGNIQnpMbU51WmpFd0xtdHVhUzVzWVdJdQpaVzVuTG1KdmN5NXlaV1JvWVhRdVkyOXRNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUF2UXVDZXUxakp1OXo5SHAvTmdjN09YbG5teFhlRHpaS3pzMXZkMVk4UXI3RkJ5VVRJVWNRdXpyYTl1d3kKTDVXUk9MbjBOWDIvRlVDNHJDVzR2OTBPM2I0WTZrV0cxQ0s3TVpPM3pDRmRvaWRtMU1OMFR0VkRlekZ2bHNUbQpXcnRaSkFtRFpqOEV0MHRHVjRhWkU3UndidzZRdXJWN24xdi9tK01vNGFFcVk3MC9mVlAwemhXdnhLandSN0lSCk52NmVaNnBRaWpHVGw1M0hEaWcyUkNoS3BwQzI2OW5qZzkxVkFyUjZtaCszWTJkanhBNHhMNUcrYWlHL2ZyL1QKQnJlNkpSdUpQZ2lnWEdEWWJ1cXBqV3lMbkcxN00xVk01WDFpeXhzU2w2aXczT0phNXR5T0haNlZJWiszY0x6eApjNDBja1c4Y3FoWUFQK2hCQTUzSllCNFRxUUlEQVFBQm80R0pNSUdHTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUCkJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJUbWg1SXkKWFMvL3lHdklaUDdWR1JvZVpPM2VGekF5QmdOVkhSRUVLekFwZ2ljcUxtRndjSE11WTI1bU1UQXVhMjVwTG14aApZaTVsYm1jdVltOXpMbkpsWkdoaGRDNWpiMjB3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUduRk03a0dtVStlClFSWkxwdkNlS3d5eWRTS3prd0NRUzIrYmVvR1FPVklvR29YaS9QSStBcE1pMjR2K3h5dXFydWoyWFZuK1MxbVkKeEcrVXJ3dXJJRE5UdzEvbVBudTB0TGVwVzlLMXZ5Lzg3aDA0OGYvY0djdnVpQkVRc0lVQW1xNEl0TFpCTnRRcQprSm1xZ0N6VXE5MWp5cFhPdFZRRzloUi9JZWw1WG5NSjZSL0o1Qm55K2JBSTR3a3Y1aU9uR09ndC9raThnQjA4CkVOUk55a3RVMDRKS0l3anNFMFMxc0xaNXhFQ3g1TS9zM3NvWGdBZTcrdmtHWDNHQ1F6WHp4c1JsZzZ1SjVCYlUKTnJXR2tBK3FyTVZKcGdpM3BQa1Y0VCsvQmc0a3RVcXN0NkxPb1FMTUhna0trNlNpZ1dHOHBJSHpDbGVpbHgyZQozdzVtazlwaG9mYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9UUTRNVGd5TXpnd0hoY05NakF3TnpFMU1UTXdNelUzV2hjTk1qSXdOekUxCk1UTXdNelU0V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPVFE0TVRneU16Z3cKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFkveitHUXBBL3dVbTIveGQrTmQxSApCWEFSamRMRE55RTl6U0VmTTVBK0FrK2lLV1BVV1JOZ05OWWFkWnMyWDE5aEJOekQvdnBCdm5NTmVzcktHaDhjCjh4ODRiQWxkekxMaHlva1R2b1FkUi8zaWxsclY2bXJNTEg0Y3dNVFI1TDFnUnpzWkoxdWFIaE1qNWc1OGVaY2sKT2hZWjgrL1AvaFBrMlNuZGJzZUVHZmxKYXJIZ3pKT3FPcTIreXBGSlA4ci9xUy82VWdWRWR2blFwS3VNYjluUgpsVmhvcVJaRURLQ2xZNEpzOFJaT1BQTzZWNTYxRmdva3luTmxzRVNVanJmeFM1YVluYlY4eFFsRnBJMHQwSzI0CjljeExUSWRiS3BOQndiUUJleHEzU1ZhN0l6blA2UVkybTlMdUswOUVEcHV4WTd2ZDRHcm80aVFwSElLMGhVOS8KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXFuWndIMDM2Q1ZIMmNhN0s5THZkWTFRWGR4VVJmTXR0bjQrT2dzNjBVCmIvajFnQXlnS0VrSGF5QjIzcjhkTFRSVUg2QnRNQ0ZaTXlyT1ZiMVQ1S1E0UzNjcjVkMDh6YURVMnI4OGFVaCsKNDFkVGtMSlZyQ1JraCtadW1WeW4wRUNHUk9XN0N5aFFMcWZ5UDNSc3lVQTZxamVhNG5pM0hGa3Z5bjFNZS9sZgorSTFMM01wV0ZWWWw1M3BKeW40cVhaYlRFWUZoWTczODVrQytnSUcwSDc5VU12blZWOWloRFhzUFVORFY4dVlNCis0bUlxbVcyUXpzOVNLeWQrZVY0YXV2ZTI0c3pIMEQ4cGNPQlk3QUIwWTBMaVJTeFNjcTN5aFJ3U3g4YUljZ2IKcmJ4Vkc0UmJXNHhUOTdXTjRuNkFqeGgrRVpUQ08xM211dUhZZlB5MktweWIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFFEQ0NBaWlnQXdJQkFnSUlDL1g0a2hGT2ZVb3dEUVlKS29aSWh2Y05BUUVMQlFBd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUI0WERUSXdNRGN4TlRFeU16WTBOMW9YRFRNd01EY3hNekV5TXpZME4xb3dQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNjN6alF0bTJNbVk0Cjk4UFF4OU9BZGJRRS9yOTZRMGRRSTI4WEhYUFpQRDJtbENLR1crMENjUGVlRFZZVmdqendTQVNzc0ZFaHY2Q2oKKzlhZHFlVzQ5alh6RG1mbHZBRU1aNjZwWVJwNzN2cVZoL1pMT2xZRVJpby9hQjlYazJlMjI1WURiSkJaOFNrVwpPVXB6UXZwYVJLYnhMejRSQ2FkejhOSE5pYzJ4MngwZytHYUtkb1hwdlBwM25wR0RWNUdKSUI3TmpzYmY2bEcwClBNNXVyVzVuNnJFMURQUGxKNW83eDRwRnNjQXZHWGFVZzZ2dDBldWdTQ0d1bHVmTlIzdDYvVnFRTExKT3ZjQ0MKTS9mL25pYURyaGV4OTVuYy9xNW0yb20yekZEK1VRajdFOXN2SXhkWmRJby91LzZtNFlWaUJlbC8xM1hWOHp5TQpNNE05RVVqdTRRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCCi96QWRCZ05WSFE0RUZnUVVRcCs0eDNNc3drdjN1WDJmOFVsc01IUEpLRVV3RFFZSktvWklodmNOQVFFTEJRQUQKZ2dFQkFMdjBwZXdmaWtKWklzSWhTY3IyeGNFSTZlV1M3NXNrdUlFZDR4TnBxZFY4L2FUNGVYTEZUVG5pRlQraApqQzBQcGxmTjlCc0x4Z0xiTmZ0NlZEN29zOTRpbkt2VUpicGxPRkYyWml5cEZ3OGdraXcxeUtjcUdFaXB0K3YvCll0UC9CTXd5cWJoMC9oNE5ZbU9vOXZOSDhscDNPcXJBaFpnakFzMFpIUnc2c09lNFJIQkFvbGZRbVcwNWFmZzkKeVEyRmNzdUlhaWdNVmdMTm9CTWJmaTE0eVQ5Y1J2VktyRlU0NGpjN01GSUN3UHRmaXhUT1ZwYWx5TEZEbzJrRQpBd09udGhXMHZ4cFA3Tk0zVjdOOFhxS2NzMWYrNzZLcFhxQzRvR0RFd3JkS25NVVlSYWhBN0llMTNJS1AvcUoyCm52REZDOFBiVEtmdlJWSmdnTmtBdGlTTDhkMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFREQ0NBalNnQXdJQkFnSUlFYm1OWnppazRjOHdEUVlKS29aSWh2Y05BUUVMQlFBd1JERVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMmFXTmxMVzVsCmRIZHZjbXN0YzJsbmJtVnlNQjRYRFRJd01EY3hOVEV5TXpZME4xb1hEVE13TURjeE16RXlNelkwTjFvd1JERVMKTUJBR0ExVUVDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMgphV05sTFc1bGRIZHZjbXN0YzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUFvRVlzbHY0WCs1WmhmZHpyays3MmVqaGErMjhCU054L3loWlpIeEtXK0huY0RqRkM2ZVJXSnFYbU9ZdDkKUUJjdTYvL21ReDQ2TTAxaDUzSTNlVXlxQVU4M3REMmxKaFZDOHlwNldsVFVvbjRtNnpud0tLNnd5ZWNJTCtWUgo3OXA1bXU5bmpqUmZNRHFOYm5wd2Nic1RTcjcxc2lndEZvYnJDa2VPV3ZiWkxpTWdJczBsbG1aRXluT2ZHbUN6Ckxxb2VwZmhsZ0VYWWNrY2ZLWTNaZklQZ1JldGIxekVnRGthUFJxejVIcjErT0ptNGlOTUtldVNteStwQktYYjUKZ3hOUnBOU1Q2UytSakhMMWRIVS9QSzV4dHZnY1gzOWNCSng2SEZUU2t0SkgxVElxMTBQRnF1cFk1WGFISzNTYgpsTTJXV0dxVjhqZGR0am9pRndvV3JDUzhid0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVK2JPOWlQOC9wbXhuMnRFM0VJNkVDd2t1VVJ3d0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBREhVQXJYME8vdjEvS0txb29sUWE4elJKdXBNYlRUOXdFbnFoaTFiaFpoeQpmUCszVlhteGU4TFU0dGd6V2Z3cGZVYi85WmxPL0ZkMGk1UnFRK2Y4cWZTNFFHNEJyRHpiUm51SGVqa01KODNUCnZvd29vZktNWGxVSWNSUmt0WmtQd2pZVENKaVMxakozWTg5cm9qTkpXdllJRk5GRklZSnI4MkhyWlZwMHdTNlYKaFpDYks2QzdrK0JaZnMrOWo2aHhEcUg3TTFETS9OaTZqWEdIRGd6bHBpYXVBamcxSU9VL1crdFgzS2hWR2VtNQpFakVPZURydk90UUpwaTVib204ek5GLzBxM2JuWlgreUJzSStreExZd3BOMmNJbk9RSFdKcWtDOEFXT0hqbFpOCklnWFdaQkdIdEVUSkE2ZEYram1aS2lvYnBLM2krS1JkYlRFcmM4cGNpK3c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJV1BVV1RKb1JCMUl3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd056RTFNVEl6TmpRM1doY05NekF3TnpFek1USXpOalEzV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWMzTzFkMWEvSWtJUEJVM3VtSjEyL1NMVnFWSEI2RQovekJaU0FMTXR5Rm5uNTVrS0QxS0R1aGFxNGVMb3NWenRBYTdwdEtBZE5aMXJkWmRmU1BEZ01LOExJMDRYLytGCk1ZQ2kvNVZFK1ljMTFXbHRvQUFJT2FMUHVzcE8zRi9rTDlBN3lFb1BqdXppdDRydXFIM2RNWXpFMnFUZ1pDMTYKVW5PTkQyaG42SzZRWUJ0ZkxJZzduN1VEVUlTZ3cwWXEyaTg4Y0hRR2pqS1Z0TkZneG5vN2d3OE03YkM0M1locgpHNHM3dHdPMm1SZjJHVHpDTC9OVVdPQXNUY3VLcTRFT09WWkQ1Q1BLc3IybXFWclk0eVYvcmF5R0VLRy9mWjBiClpYUzVGOG1WOVJOd3A3REpKUlVvdk92aHkxRjlRWHRrUytvNjF1YkxGbXBlZXF2c3g1dnN0Z1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkd4NgpTTG45eTRnVWw4czRDRjF1NzN1SlZVTkdNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFtaGw2VGFPUXBCK0N3Ck9vcy82MTBmRnVyd2hxWjduVEp2L2s1UjREbVJTVGJFNHlXNTR4NlhwcmdYOTJvTWlDbWJBRjFPdU9jeHVwa04KRjFIZ3RteUxLYXpPQjBnTjgxOEY4Ujg4WEVPWlArSytjcXZBVjBDWVRERVRwYzNPTHJGbzJaVHltczdUMC9GaQpLaUsySkM0YUtWTTJETWlUMlVKZTduWGpoMjM3RjRqNGVOV2dCOWd6dWIwdzNTY3ozcHRuOEN2NjBqU0o5dVlvCk01V1AyOUEzV1ZFM1lpTVlsL1FZbDlObGZEMUxrWnQxMFQ4TUxKTUIvVloraE94QmxUQ0NDS1IvQ00vWEwweTgKRGowL3FxVlFLZEt0Q1B6SjBXRHpCOXVvSkVKZ2hZVUdJaHdvdjVDZ1RlNFNwRzJxNUw5Z0E4RU5heklZOTFRVQowQjdSN0twRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==' 
    - name: token
      value: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxGSHhiMHNQcXZicWdaTlBPcjR4TThvSkNocnYtM29JMm1STmQ2OWNZRU0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZXBsb3ktdGVzdHBtZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJyb2JvdC10b2tlbi1ma2g2cCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJyb2JvdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjJlM2ExOTI1LWY1NDAtNDU4Yy1iNmViLWM4ZTYzOWVmMDgwOSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZXBsb3ktdGVzdHBtZDpyb2JvdCJ9.mGaxEZzsIKUxlqqc-TSbKsTC5WPElP0y14n4FQ3REaF9qmTeuG6nbmWl39dpYGzQR8wG1KtovqN3cEvqzfRW2rW0P6sTFRWwHfJOjDybH9z9MruIzcZ4UCBLj0gy7y1N7eZmsxrKBAbDXWZWcWkQHrDC9ZpZ3QmwAgBOCCFVv3VnkfTA1KHychE-AwVbM51NUFCQggJ4b_FLzI69tk60Zv54_y1m1ow_wtn3Pg20pJV0WyLKqQsFkR7MFL6GCYsMjxMHHsCUSgrqb23_7Phjcn7jN72iytuSx8OeatOF4g-tLeIgMpERPRXqSkRIP17xjaw4Jwqzpm1CAo02TFIxBg'
